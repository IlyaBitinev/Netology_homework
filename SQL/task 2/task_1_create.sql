CREATE TABLE IF NOT EXISTS Genre (
	genre_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(60) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS Musician (
	musician_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS Music_genre (
	music_genre_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	genre_id INT, 
	musician_id INT, 
	FOREIGN KEY (genre_id)  REFERENCES Genre (genre_id) ON DELETE SET NULL,
	FOREIGN KEY (musician_id) REFERENCES Musician (musician_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Album (
	album_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	year_of_release DATE
);

CREATE TABLE IF NOT EXISTS Musicians_albums(
    musicians_albums_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	musician_id INT, 
	album_id INT, 
	FOREIGN KEY (musician_id) REFERENCES Musician (musician_id) ON DELETE SET NULL,
	FOREIGN KEY (album_id) REFERENCES Album (album_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Track(
	track_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	time SMALLINT NOT NULL,
	album_id INT, 
	FOREIGN KEY (album_id) REFERENCES Album (album_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Collections (
	collections_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	year_of_release DATE
);

CREATE TABLE IF NOT EXISTS Track_collections (
	track_collections_id INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	track_id INT, 
	collections_id INT, 
	FOREIGN KEY (track_id) REFERENCES Track (track_id) ON DELETE SET NULL,
	FOREIGN KEY (collections_id) REFERENCES Collections (collections_id) ON DELETE SET NULL
);






